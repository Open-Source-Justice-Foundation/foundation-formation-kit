import {
  ORGANIZING_DOCUMENT_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
  ORGANIZING_DOCUMENT_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_INVALID_TYPE_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH,
  WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_NON_EMPTY_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_INVALID_TYPE_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH,
  WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_NON_EMPTY_ERR_MSG,
  WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
} from "~/lib/formation/constants/part-3/constants";
import { object, string, z } from "zod";

// TODO
// Simplify this
// Should invalid_type_error be added?
// Should nonempty be added?
// Should other validation checks be added?
export const form1023Part3RequiredProvisionsInYourOrganizingDocumentStep1Schema =
  object({
    organizingDocumentExemptPurposesProvision: z.enum(["Yes", "No"], {
      required_error:
        ORGANIZING_DOCUMENT_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
    }),
    whereOrganizingDocumentMeetsExemptPurposesProvision: string({
      required_error:
        WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
      invalid_type_error:
        WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_INVALID_TYPE_ERR_MSG,
    })
      .nonempty({
        message:
          WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_NON_EMPTY_ERR_MSG,
      })
      .max(
        WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH,
        {
          message:
            WHERE_ORGANIZING_DOCUMENT_MEETS_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH_ERR_MSG,
        },
      )
      .trim(),
  });

export const form1023Part3RequiredProvisionsInYourOrganizingDocumentStep2Schema =
  object({
    organizingDocumentDissolutionExemptPurposesProvision: z.enum(
      ["Yes", "No"],
      {
        required_error:
          ORGANIZING_DOCUMENT_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
      },
    ),
    whereOrganizingDocumentMeetsDissolutionExemptPurposesProvision: string({
      required_error:
        WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_REQUIRED_ERR_MSG,
      invalid_type_error:
        WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_INVALID_TYPE_ERR_MSG,
    })
      .nonempty({
        message:
          WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_NON_EMPTY_ERR_MSG,
      })
      .max(
        WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH,
        {
          message:
            WHERE_ORGANIZING_DOCUMENT_MEETS_DISSOLUTION_EXEMPT_PURPOSES_PROVISION_MAX_LENGTH_ERR_MSG,
        },
      )
      .trim(),
  });
